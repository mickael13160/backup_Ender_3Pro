[server]
host: 0.0.0.0
port: 7125
klippy_uds_address: /home/pi/printer_1_data/comms/klippy.sock

[authorization]
trusted_clients:
    10.0.0.0/8
    127.0.0.0/8
    169.254.0.0/16
    172.16.0.0/12
    192.168.0.0/16
    FE80::/10
    ::1/128
    127.0.0.1
    100.114.214.106

cors_domains:
    *.lan
    *.local
    *://localhost
    *://localhost:*
    *://my.mainsail.xyz
    *://app.fluidd.xyz
    http://100.65.102.108
   
[octoprint_compat]

#[history]

[file_manager]
# post processing for object cancel. Not recommended for low resource SBCs such as a Pi Zero. Default False
enable_object_processing: True

[update_manager]
channel: dev
refresh_interval: 168

#[update_manager KlipperScreen]
#type: git_repo
#path: ~/KlipperScreen
#origin: https://github.com/jordanruthe/KlipperScreen.git
#env: ~/.KlipperScreen-env/bin/python
#requirements: scripts/KlipperScreen-requirements.txt
#install_script: scripts/KlipperScreen-install.sh

[update_manager mainsail]
type: web
channel: stable
repo: mainsail-crew/mainsail
path: ~/mainsail

[update_manager mainsail-config]
type: git_repo
primary_branch: master
path: ~/mainsail-config
origin: https://github.com/mainsail-crew/mainsail-config.git
managed_services: klipper

#[update_manager timelapse]
#type: git_repo
#primary_branch: main
#path: ~/moonraker-timelapse
#origin: https://github.com/mainsail-crew/moonraker-timelapse.git
#managed_services: klipper moonraker

#[timelapse]
###   Directory where the generated video will be saved
#output_path: ~/timelapse/
###   Directory where ffmpeg is installed
#ffmpeg_binary_path: /usr/bin/ffmpeg

# Crowsnest update_manager entry
#[update_manager crowsnest]
#type: git_repo
#path: ~/crowsnest
#origin: https://github.com/mainsail-crew/crowsnest.git
#managed_services: crowsnest
#install_script: tools/install.sh

# Crowsnest update_manager entry
[update_manager crowsnest]
type: git_repo
path: ~/crowsnest
origin: https://github.com/mainsail-crew/crowsnest.git
primary_branch: legacy/v3
install_script: tools/install.sh

# Sonar update_manager entry
[update_manager sonar]
type: git_repo
path: ~/sonar
origin: https://github.com/mainsail-crew/sonar.git
primary_branch: main
managed_services: sonar
install_script: tools/install.sh

# Mobileraker update_manager entry
#[update_manager mobileraker]
#type: git_repo
#path: ~/mobileraker_companion
#origin: https://github.com/Clon1998/mobileraker_companion.git
#primary_branch:main
#managed_services: mobileraker
#env: ~/mobileraker-env/bin/python
#requirements: scripts/mobileraker-requirements.txt
#install_script: scripts/install-mobileraker-companion.sh

[update_manager mobileraker]
type: git_repo
path: ~/mobileraker_companion
origin: https://github.com/Clon1998/mobileraker_companion.git
primary_branch:main
managed_services: mobileraker
virtualenv: ~/mobileraker-env
requirements: scripts/mobileraker-requirements.txt
install_script: scripts/install.sh

# KAMP update_manager entry
[update_manager Klipper-Adaptive-Meshing-Purging]
type: git_repo
channel: dev
path: ~/Klipper-Adaptive-Meshing-Purging
origin: https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging.git
managed_services: klipper
primary_branch: main

# Z_Calibration update manager entry
[update_manager z_calibration]
type: git_repo
path: /home/pi/klipper_z_calibration
origin: https://github.com/protoloft/klipper_z_calibration.git
managed_services: klipper

[update_manager happy-hare]
type: git_repo
path: ~/Happy-Hare
origin: https://github.com/moggieuk/Happy-Hare.git
primary_branch: main
install_script: install.sh
managed_services: klipper

[mmu_server]
enable_file_preprocessor: False

[update_manager KlipperScreen]
type: git_repo
path: /home/pi/KlipperScreen
origin: https://github.com/moggieuk/KlipperScreen-Happy-Hare-Edition.git
env: /home/pi/.KlipperScreen-env/bin/python
requirements: scripts/KlipperScreen-requirements.txt
install_script: scripts/KlipperScreen-install.sh
managed_services: KlipperScreen


